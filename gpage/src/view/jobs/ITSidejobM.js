import { useResponsiveApi } from "../../App";
import Banner from "../../components/Banner";
import Content2 from "../../components/Content2";
import Content3 from "../../components/Content3";
import Footer from "../../components/Footer";
import LeftMenu from "../../components/LeftMenu";
import css from "../../css/Contents.css";

export default function ITSidejobM(){
    var {isMobile} = useResponsiveApi();
    return (<>
        <Banner></Banner>
        <div className="simpleflex">
            {isMobile?<div></div>:<LeftMenu></LeftMenu>}
            
            <div className="contenttext">
            <h1>IT를 배우면 어떤 부업을 할 수 있나요?</h1>
            사실 부업을 하는 IT 직장인은 생각보다 많지 않습니다.<br/><br/>
            직장 일도 힘에 부치기 때문에<br/>
            부업까지 손을 대려면 더 많은 에너지와 노력이 필요하기 때문입니다.<br/><br/>
            
            부업을 할 수 있을 때까지는 많은 노력이 필요합니다.<br/><br/>
            
            그럼 IT 종사자들은 어떤 부업을 주로 하고 있는지 살펴보겠습니다.<br/><br/>

            <h3>- 개발 외주</h3><br/><br/>
            보통 외주 부업을 하는 직군은 개발자 직군이 많습니다.<br/>
            그 중에서도 풀스택 개발자의 역량이 요구됩니다.<br/><br/>
            
            개발을 해야하는 시장의 수요가 많기 때문에<br/>
            외주도 많습니다.<br/><br/>
            하지만 개발자가 되었다고 하여서<br/>
            외주를 받는 사람은 많지 않습니다.<br/><br/>

            왜냐하면 외주 요청시 고려해야 하는 사항이 많기 때문입니다.<br/><br/>
            
            어떤 언어를 사용해야 하는지,<br/>
            요구사항은 무엇인지,<br/>
            유지보수는 언제까지 어떻게 할 것인지, <br/>
            어플리케이션은 안드로이드와 iOS 둘 다 개발해야 하는지, <br/>
            기간은 언제까지인지 등등<br/><br/>
            
            기획부터 사업관리까지<br/>
            모든 사항을 혼자서 해야하기 때문에 <br/>
            여간 에너지가 많이 소비되는 것이 아닙니다.<br/><br/>

            거의 1인 사업 프리랜서와 같이 일해야 하기 때문에<br/>
            직장을 병행하며 외주를 받는 사람은<br/>
            개발 3년차 이상의 고급 실력자가 되어서 <br/>
            직장일도 수월하게 하고,<br/>
            개발뿐 아니라 서버도 함께 다룰 수 있고, <br/>
            자기 시간에 여유가 있는 사람이 주로 하게 됩니다.<br/><br/>

            개발 외주의 경우에는 프론트엔드부터 백엔드까지 구현해야하기 때문에<br/>
            풀스택을 주로요구합니다.<br/><br/>
            
            시스템 엔지니어의 경우에는<br/>
            서버 구축만을 의뢰하는 외주를 찾는 것이 조금 더 어렵습니다.<br/><br/><br/>

            <h3>- 강의</h3>
            일정 수준의 경력이 쌓이면 <br/>
            학원 등에서 이력서를 보고 헤드헌팅 등을 통해 연락을 주기도 합니다. <br/><br/>
            
            또는 내가 실력이 되겠다 하면<br/>
            학원에 연락을 하는 경우도 있습니다. <br/>
            보통 기초과정을 가르치기 때문에<br/>
            실무자 수준에서는 크게 어렵지 않게 느껴질 수도 있습니다.<br/><br/>

            강의 부업의 어려운 점이라고 하면, <br/>
            정기적으로 시간을 내어야 하기 때문에 <br/>
            근무시간 이후에 저녁반을 강의하는 경우가 많습니다. <br/><br/>
            
            이는 사람에 따라서는 부업 보다는 <br/>
            연장근무로 느껴질 수 있기 때문에 <br/>
            호불호가 갈리기도 합니다. <br/><br/>
            
            만약 강의 실력이 좋다면 <br/>
            괜찮은 연봉을 받으면서 <br/>
            전업 강사로 전향을 하는 경우도 종종 있습니다.<br/><br/><br/>


            <h3>- 홈페이지 / 블로그 / 앱 개발 및 운영</h3><br/><br/>

            풀스택 개발자가 되거나, <br/>
            조금만 서버를 만질 수 있으면 <br/>
            네이버, 다음 등의 사이트를 의존하지 않고서 <br/>
            자체적으로 홈페이지나 블로그를 구축할 수 있습니다.<br/><br/>

            네이버의 경우에는 블로그 내에 <br/>
            광고성 글을 포스팅할 경우 <br/>
            블로그 품질 지수가 낮아지며 노출이 되지 않는 경우가 발생합니다. <br/><br/>
            
            홈페이지, 블로그, 앱 모두 수익 구조는 광고 노출입니다. <br/>
            광고수익은 구글 애드몹의 경우 <br/>
            단순 노출당 7원, 클릭당 70원 이상의 수익이 발생합니다.<br/><br/>

            이러한 광고수익은 광고 정책에 따라 <br/>
            무분별한 클릭이 발생 할 경우 무효트래픽으로 분류되어 <br/>
            광고계정이 영구히 정지될 수 있으니 <br/>
            광고 정책을 꼼꼼히 읽어보면서 진행해야합니다.<br/><br/>

            홈페이지, 블로그, 앱 개발이 <br/>
            원활이 잘 이루어져서 <br/>
            일 방문수가 10만을 넘어간다면 <br/>
            직장을 그만둬도 될 정도의 수익을 올린다고 합니다.<br/><br/>

            <h3>- 출판</h3>
            또 하나의 기회라고 한다면 <br/>
            기술 전문성으로 출판이 가능하다는 점입니다. <br/><br/>

            사실 출판은 누구나 가능하지만 아무나 가능하지는 않습니다.<br/><br/>
            
            저자가 누구인지, 어떤 내용이 있는지에 따라서<br/>
            책의 매출이 달라지기 때문에, <br/>
            출판사에서도 책을 출판 할 때에 신중하게 접근합니다.<br/><br/>

            하지만 시대가 달라졌다고 느껴지는 부분은 <br/>
            이렇게 개인의 전문성으로 만들어진 전자문서 또한 <br/>
            출판 서적 시장으로 인정되어 거래가 되고 있다는 점입니다.<br/><br/>
            
            </div>
        </div>
        {isMobile?<div><Content2></Content2><Content3></Content3></div>:<div></div>}
        <Footer></Footer>
    </>)
}